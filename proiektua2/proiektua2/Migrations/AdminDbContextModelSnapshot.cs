// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using proiektua2;

namespace proiektua2.Migrations
{
    [DbContext(typeof(AdminDbContext))]
    partial class AdminDbContextModelSnapshot : ModelSnapshot
    {
        protected override void BuildModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("Relational:MaxIdentifierLength", 64)
                .HasAnnotation("ProductVersion", "5.0.6");

            modelBuilder.Entity("proiektua2.Models.BezeroaEskaera", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    b.Property<string>("Abizena")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<DateTime>("Data")
                        .HasColumnType("datetime");

                    b.Property<int>("Erabiltzaileaid")
                        .HasColumnType("int");

                    b.Property<string>("Helbidea")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<string>("Herrialdea")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<string>("Hiria")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<string>("Izena")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<string>("Postakodea")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<string>("Telefonoa")
                        .IsRequired()
                        .HasColumnType("text");

                    b.HasKey("Id");

                    b.ToTable("BezeroaEskaera");
                });

            modelBuilder.Entity("proiektua2.Models.Categoria", b =>
                {
                    b.Property<int>("id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    b.Property<string>("Nombre")
                        .HasColumnType("text");

                    b.HasKey("id");

                    b.ToTable("Categoria");
                });

            modelBuilder.Entity("proiektua2.Models.Erosketa", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    b.Property<int>("BezeroaEskaeraId")
                        .HasColumnType("int");

                    b.Property<DateTime>("Data")
                        .HasColumnType("datetime");

                    b.Property<int>("Jarraipena")
                        .HasColumnType("int");

                    b.Property<int>("Kantitatea")
                        .HasColumnType("int");

                    b.Property<int>("ProductoId")
                        .HasColumnType("int");

                    b.Property<int>("dirua")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("BezeroaEskaeraId");

                    b.HasIndex("ProductoId");

                    b.ToTable("Erosketa");
                });

            modelBuilder.Entity("proiektua2.Models.Linea", b =>
                {
                    b.Property<int>("idLinea")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    b.Property<int>("idPedido")
                        .HasColumnType("int");

                    b.Property<int>("idProducto")
                        .HasColumnType("int");

                    b.Property<int>("numlineas")
                        .HasColumnType("int");

                    b.Property<float>("precio")
                        .HasColumnType("float");

                    b.Property<int>("unidades")
                        .HasColumnType("int");

                    b.HasKey("idLinea");

                    b.ToTable("Linea");
                });

            modelBuilder.Entity("proiektua2.Models.Marca", b =>
                {
                    b.Property<int>("id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    b.Property<string>("Nombre")
                        .HasColumnType("text");

                    b.HasKey("id");

                    b.ToTable("Marcas");
                });

            modelBuilder.Entity("proiektua2.Models.pasahitzaAldatu", b =>
                {
                    b.Property<int>("erabiltzeId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    b.Property<string>("Pasword1")
                        .HasColumnType("text");

                    b.Property<string>("Pasword2")
                        .HasColumnType("text");

                    b.Property<string>("PaswordOld")
                        .HasColumnType("text");

                    b.HasKey("erabiltzeId");

                    b.ToTable("pasahitzaAldatu");
                });

            modelBuilder.Entity("proiektua2.Models.Pedido", b =>
                {
                    b.Property<int>("idPedido")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    b.Property<DateTime>("fecha")
                        .HasColumnType("datetime");

                    b.Property<int>("idUsuario")
                        .HasColumnType("int");

                    b.HasKey("idPedido");

                    b.ToTable("Pedidos");
                });

            modelBuilder.Entity("proiektua2.Models.Producto", b =>
                {
                    b.Property<int>("id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    b.Property<int>("Categoriaid")
                        .HasColumnType("int");

                    b.Property<int>("Deskontua")
                        .HasColumnType("int");

                    b.Property<bool>("Eskaintza")
                        .HasColumnType("tinyint(1)");

                    b.Property<int>("Marcaid")
                        .HasColumnType("int");

                    b.Property<string>("Nombre")
                        .HasColumnType("text");

                    b.Property<string>("descripcion")
                        .HasColumnType("text");

                    b.Property<string>("imagen")
                        .HasColumnType("text");

                    b.Property<float>("precio")
                        .HasColumnType("float");

                    b.Property<float>("precioTotal")
                        .HasColumnType("float");

                    b.HasKey("id");

                    b.HasIndex("Categoriaid");

                    b.HasIndex("Marcaid");

                    b.ToTable("Productos");
                });

            modelBuilder.Entity("proiektua2.Models.Saskia", b =>
                {
                    b.Property<string>("SaskiaId")
                        .HasColumnType("varchar(767)");

                    b.HasKey("SaskiaId");

                    b.ToTable("Saskia");
                });

            modelBuilder.Entity("proiektua2.Models.SaskiaAlea", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    b.Property<DateTime>("Data")
                        .HasColumnType("datetime");

                    b.Property<int>("Kantitatea")
                        .HasColumnType("int");

                    b.Property<int>("ProductoId")
                        .HasColumnType("int");

                    b.Property<string>("SaskiaId")
                        .HasColumnType("text");

                    b.HasKey("Id");

                    b.HasIndex("ProductoId");

                    b.ToTable("SaskiaAlea");
                });

            modelBuilder.Entity("proiektua2.Models.Usuario", b =>
                {
                    b.Property<int>("idusuario")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    b.Property<bool>("RememberMe")
                        .HasColumnType("tinyint(1)");

                    b.Property<string>("password")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<string>("tipo")
                        .HasColumnType("text");

                    b.Property<string>("usuario")
                        .HasColumnType("text");

                    b.HasKey("idusuario");

                    b.ToTable("Usuarios");
                });

            modelBuilder.Entity("proiektua2.Models.Erosketa", b =>
                {
                    b.HasOne("proiektua2.Models.BezeroaEskaera", "BezeroaEskaera")
                        .WithMany("Erosketak")
                        .HasForeignKey("BezeroaEskaeraId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("proiektua2.Models.Producto", "Producto")
                        .WithMany()
                        .HasForeignKey("ProductoId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("BezeroaEskaera");

                    b.Navigation("Producto");
                });

            modelBuilder.Entity("proiektua2.Models.Producto", b =>
                {
                    b.HasOne("proiektua2.Models.Categoria", "Categoria")
                        .WithMany("Productos")
                        .HasForeignKey("Categoriaid")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("proiektua2.Models.Marca", "Marca")
                        .WithMany("Productos")
                        .HasForeignKey("Marcaid")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Categoria");

                    b.Navigation("Marca");
                });

            modelBuilder.Entity("proiektua2.Models.SaskiaAlea", b =>
                {
                    b.HasOne("proiektua2.Models.Producto", "Producto")
                        .WithMany()
                        .HasForeignKey("ProductoId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Producto");
                });

            modelBuilder.Entity("proiektua2.Models.BezeroaEskaera", b =>
                {
                    b.Navigation("Erosketak");
                });

            modelBuilder.Entity("proiektua2.Models.Categoria", b =>
                {
                    b.Navigation("Productos");
                });

            modelBuilder.Entity("proiektua2.Models.Marca", b =>
                {
                    b.Navigation("Productos");
                });
#pragma warning restore 612, 618
        }
    }
}
